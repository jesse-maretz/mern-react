{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","roster","newPlayer","name","position","number","_id","fetch","then","res","json","console","log","setState","this","fetchRoster","e","target","value","preventDefault","method","headers","body","JSON","stringify","player","nameUpdate","url","idUpdate","window","location","reload","className","length","map","i","Container","onSubmit","handlePost","type","placeholder","id","onChange","handlePlayerPost","Button","variant","handleDelete","handlePlayerRemove","handleUpdate","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01c10479.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Alert, Container } from \"react-bootstrap\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      roster: \"\",\n      newPlayer: {\n        name: \"\",\n        position: \"\",\n        number: 0,\n        _id: \"\",\n      },\n    };\n  }\n\n  fetchRoster() {\n    let url = \"https://yanks-roster.herokuapp.com/players\";\n    fetch(url)\n      .then((res) => res.json())\n      .then((roster) => {\n        console.log(roster);\n        this.setState({ roster: roster });\n      });\n  }\n  componentDidMount() {\n    this.fetchRoster();\n  }\n\n  handlePlayerPost(e) {\n    console.log(e.target.value);\n    console.log(this);\n    this.setState({\n      newPlayer: {\n        name: e.target.value,\n      },\n    });\n  }\n  /*\nhandlePlayerUpdate(e){\n  console.log(e.target.value)\n  console.log(this)\n  this.setState({newPlayer: {\n    name: e.target.value\n  }})\n}\n*/\n  handlePlayerRemove(e) {\n    console.log(e.target.value);\n    console.log(this);\n    this.setState({\n      newPlayer: {\n        _id: e.target.value,\n      },\n    });\n  }\n\n  handlePost(e) {\n    console.log(this.state.newPlayer);\n    e.preventDefault();\n    let url = \"https://yanks-roster.herokuapp.com/players\";\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(this.state.newPlayer),\n    })\n      .then((res) => res.json())\n      .then((player) => {\n        this.setState({ roster: [...this.state.roster, player] });\n        console.log(this.state);\n      });\n  }\n\n  handleUpdate(e) {\n    e.preventDefault();\n    console.log(this.state.nameUpdate);\n    let url = \"https://yanks-roster.herokuapp.com/players/\" + this.state.idUpdate;\n    console.log(url)\n    fetch(url, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({name: this.state.nameUpdate}),\n    })\n      .then((res) => res.json())\n      .then((player) => this.setState({ roster: this.state.roster }))\n  }\n  handleDelete(e) {\n    console.log(this.state.newPlayer);\n    e.preventDefault();\n    let url =\n      \"https://yanks-roster.herokuapp.com/players/\" + this.state.newPlayer._id;\n    fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((player) => {\n        window.location.reload(false);\n        console.log(this.state);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Yankees Roster</h1>\n        {this.state.roster.length\n          ? this.state.roster.map((player, i) => {\n              return (\n                <div key={i}>\n                  {player.name}\n                  <br />\n                  {player._id}\n                  <br />\n                  <br />\n                </div>\n              );\n            })\n          : \"\"}\n        <Container>\n          <form onSubmit={(e) => this.handlePost(e)} className=\"postForm\">\n            <h1>Add player</h1>\n            <input\n              type=\"text\"\n              placeholder=\"Name...\"\n              id=\"createPlayer\"\n              onChange={(e) => this.handlePlayerPost(e)}\n            />\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </form>\n\n          <form onSubmit={(e) => this.handleDelete(e)}>\n            <h2>Delete player</h2>\n            <input\n              type=\"text\"\n              placeholder=\"Remove a player...\"\n              id=\"removePlayer\"\n              onChange={(e) => this.handlePlayerRemove(e)}\n            />\n            <Button type=\"submit\">Submit</Button>\n          </form>\n\n          <form onSubmit={(e) => this.handleUpdate(e)}>\n            <h2>Update player</h2>\n            <input\n              type=\"text\"\n              placeholder=\"Player id to be updated...\"\n              value={this.state.idUpdate}\n              onChange={(e) => this.setState({ idUpdate: e.target.value })}\n              id=\"updatePlayerID\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"New player name...\"\n              id=\"updatePlayerNewName\"\n              value={this.state.nameUpdate}\n              onChange={(e) => this.setState({ nameUpdate: e.target.value })}\n            />\n            <Button type=\"submit\">Submit</Button>\n          </form>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}